AWSTemplateFormatVersion: 2010-09-09

Description: AWS Synthetics API Canary

Parameters:
  CanaryName:
    Description: The name for this canary (e.g. api-github-com)
    Type: String
    AllowedPattern: '^[0-9a-z_\-]+$'
    ConstraintDescription: A name consists of up to 21 lowercase letters, numbers, hyphens or underscores with no spaces
    MaxLength: 21
  CanaryScriptPackageS3Key:
    Description: The S3 key of the Canary script package
    Type: String
  CommonStackName:
    Description: The name of the common synthetics resources stack
    Type: String
    Default: synthetics-common
  ScheduleExpression:
    Description: Schedule expression e.g. cron(0 1 * * ? *) Run at 1:00am (UTC) every day
    Type: String
    Default: rate(0 minute)  # Run once at start
  SubnetId1:
    Description: VPC subnet ID
    Type: AWS::EC2::Subnet::Id
  SubnetId2:
    Description: VPC subnet ID
    Type: AWS::EC2::Subnet::Id
  TargetUrl:
    Description: The endpoint, API or url that you are testing (e.g. github.com)
    Type: String
  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id

Conditions:
  VpcModeEnabled: !Not [!Equals [!Ref VpcId, '']]

Resources:
  Canary:
    Type: AWS::Synthetics::Canary
    Properties:
      ArtifactS3Location: !ImportValue
        Fn::Sub: ${CommonStackName}:artifact-s3-location
      Code:
        Handler: !Sub ${CanaryName}.handler
        S3Bucket: !ImportValue
          Fn::Sub: ${CommonStackName}:code-bucket
        S3Key: !Ref CanaryScriptPackageS3Key
      ExecutionRoleArn: !ImportValue
        Fn::Sub: ${CommonStackName}:synthetics-role-arn
      Name: !Ref CanaryName
      RuntimeVersion: syn-nodejs-puppeteer-3.2
      RunConfig:
        ActiveTracing: True
        EnvironmentVariables:
          TARGET_URL: !Ref TargetUrl
        TimeoutInSeconds: 60
      StartCanaryAfterCreation: True
      Schedule:
        Expression: !Ref ScheduleExpression
        DurationInSeconds: "3600"
      SuccessRetentionPeriod: 90  # days
      FailureRetentionPeriod: 90  # days
      VPCConfig:
        !If [VpcModeEnabled, {SecurityGroupIds: [!Ref CanaryLambdaFunctionSG], SubnetIds: [!Ref SubnetId1, !Ref SubnetId2]}, !Ref AWS::NoValue]

  CanaryLambdaFunctionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub SG of canary ${AWS::StackName}
      VpcId: !Ref VpcId

  CanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub canary-${CanaryName}-Failed
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CanaryName
          Value: !Ref CanaryName
      EvaluationPeriods: 1
      Namespace: CloudWatchSynthetics
      MetricName: Failed
      Period: 60
      Statistic: Sum
      Threshold: 1
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:AlertTopic-Synthetics
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:AlertTopic-Synthetics
